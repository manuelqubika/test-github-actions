name: Run Script on PR Files

on:
  pull_request:

jobs:
  run-script:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      # Get changed files in the PR
      - name: Get list of changed files
        id: changed-files
        run: |
          # Get the list of files changed in the PR
          echo "${GITHUB_EVENT_PATH}"

      - name: Get list of changed files via API
        id: changed-files-api
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
        run: |
          # Fetch the PR number from the event context
          PR_NUMBER=$(jq -r '.pull_request.number' < "${GITHUB_EVENT_PATH}")
  
          # Use the GitHub API to get the list of changed files
          echo "Fetching changed files for PR #$PR_NUMBER"
          FILES=$(curl -s -H "Authorization: Bearer $GITHUB_TOKEN" \
                    -H "Accept: application/vnd.github.v3+json" \
                       "https://api.github.com/repos/${{ github.repository }}/pulls/$PR_NUMBER/files" \
                    | jq -r '.[].filename')
  
          # Save files to an output variable
          echo "Changed files: $FILES"
          echo "::set-output name=files::$(echo $FILES | tr '\n' ',')"




    #       CHANGED_FILES=$(jq -r '.pull_request.files | .[].filename' < "${GITHUB_EVENT_PATH}")
    #       echo "${CHANGED_FILES}" > changed-files.txt
    #       echo "Changed files: ${CHANGED_FILES}"
    #       echo "::set-output name=files::$(cat changed-files.txt | tr '\n' ',')"

    #   # Run the script for each file
    #   - name: Run script for each file
    #     run: |
    #       # Read the changed files from the output
    #       for FILE in $(echo "${{ steps.changed-files.outputs.files }}" | tr ',' '\n'); do
    #         echo "Running script for file: $FILE"
    #         ./tools/formatter.sh "$FILE"
    #       done
